#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void InsertTable1(Table1 instance);
  partial void UpdateTable1(Table1 instance);
  partial void DeleteTable1(Table1 instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DatabaseConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Table1> Table1
	{
		get
		{
			return this.GetTable<Table1>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table1")]
public partial class Table1 : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _bb;
	
	private string _vv;
	
	private string _nn;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbbChanging(string value);
    partial void OnbbChanged();
    partial void OnvvChanging(string value);
    partial void OnvvChanged();
    partial void OnnnChanging(string value);
    partial void OnnnChanged();
    #endregion
	
	public Table1()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bb", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string bb
	{
		get
		{
			return this._bb;
		}
		set
		{
			if ((this._bb != value))
			{
				this.OnbbChanging(value);
				this.SendPropertyChanging();
				this._bb = value;
				this.SendPropertyChanged("bb");
				this.OnbbChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vv", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string vv
	{
		get
		{
			return this._vv;
		}
		set
		{
			if ((this._vv != value))
			{
				this.OnvvChanging(value);
				this.SendPropertyChanging();
				this._vv = value;
				this.SendPropertyChanged("vv");
				this.OnvvChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nn", DbType="NChar(10)")]
	public string nn
	{
		get
		{
			return this._nn;
		}
		set
		{
			if ((this._nn != value))
			{
				this.OnnnChanging(value);
				this.SendPropertyChanging();
				this._nn = value;
				this.SendPropertyChanged("nn");
				this.OnnnChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
